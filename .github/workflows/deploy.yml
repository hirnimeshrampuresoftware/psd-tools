name: PyPI Deployment

on: [push]
 # release:
  #  types: [created]
 
jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload --skip-existing dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.archs }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        archs: [auto, aarch64]
        exclude:
          - os: windows-latest
            archs: aarch64
          - os: macos-latest
            archs: aarch64
    env:
      CIBW_BUILD: 'cp37-* cp38-* cp39-*'
      CIBW_ARCHS: ${{ matrix.archs }}
      CIBW_TEST_REQUIRES: tox
      CIBW_TEST_COMMAND: "tox -e py"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
       # with:
        #  python-version: '3.7'
      - name: Set up QEMU
        if: ${{ matrix.archs == 'aarch64' }}
        uses: docker/setup-qemu-action@v1
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython cibuildwheel       
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl          
   #   - name: Build wheels
    #    uses: joerick/cibuildwheel@v1.9.0
     #   env:
      #    CIBW_SKIP: cp27-* cp35-* pp*
       #   CIBW_ARCHS: ${{matrix.archs}}
        #  CIBW_TEST_REQUIRES: tox
         # CIBW_TEST_COMMAND: "tox -e py"
