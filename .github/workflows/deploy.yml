name: PyPI Deployment

on: [push]
 # release:
  #  types: [created]
 
jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload --skip-existing dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.archs }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        archs: [x86_64, aarch64]
        exclude:
          - os: windows-latest
            archs: aarch64
          - os: macos-latest
            archs: aarch64
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: matrix.archs == 'aarch64'
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Install Python
        uses: actions/setup-python@v2
        
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: 'cp37-* cp38-* cp39-*'
          CIBW_BEFORE_BUILD: pip install cython
          #CIBW_SKIP: '*-manylinux*_i686'
          CIBW_ARCHS: ${{ matrix.archs }}       

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl

  deploy:
    name: Release
    needs: [sdist, build_wheels]
    if: github.repository_owner == 'psd-tools'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine          
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: wheels
          path: ./dist    
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --skip-existing dist/*
