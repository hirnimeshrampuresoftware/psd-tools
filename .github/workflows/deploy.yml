name: PyPI Deployment

on: [push]
 # release:
  #  types: [created]
 
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.archs }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        archs: [auto, aarch64]
        exclude:
          - os: windows-latest
            archs: aarch64
          - os: macos-latest
            archs: aarch64
    env:
      CIBW_BUILD: 'cp37-* cp38-* cp39-*'
      CIBW_BEFORE_BUILD: pip install cython numpy
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
      CIBW_SKIP: '*-manylinux*_i686'
      CIBW_ARCHS: ${{ matrix.archs }}
      CIBW_TEST_REQUIRES: tox
      CIBW_TEST_COMMAND: "tox -e py {project}/"
      CIBW_BUILD_VERBOSITY: 1

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: matrix.archs == 'aarch64'
        id: qemu
        uses: docker/setup-qemu-action@v1

      - uses: actions/setup-python@v2
        name: Install Python
       # with:
        #  python-version: '3.x'
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel       
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
